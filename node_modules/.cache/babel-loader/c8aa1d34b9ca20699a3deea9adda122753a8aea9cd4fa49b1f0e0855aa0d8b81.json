{"ast":null,"code":"var _jsxFileName = \"/home/goddy/DEV/MY-PORTFOLIO/portfolio/src/Pages/About.js\";\nimport React from 'react';\nimport './About.css';\nimport Ipng from \"../assets/images/hero.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"section-title about-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"about me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"about-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Ipng,\n          className: \"hero-photo\",\n          alt: \"about img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"about-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"LThe width and height properties of the DOMRect object returned by the method include the padding and border-width, not only the content width/height. In the standard box model, this would be equal to the width or height property of the element + padding + border-width. But if box-sizing: border-box is set for the element this would be directly equal to its width or height. The returned value can be thought of as the union of the rectangles returned by getClientRects() for the element, i.e., the CSS border-boxes associated with the element. Empty border-boxes are completely ignored. If all the element's border-boxes are empty, then a rectangle is returned with a width and height of zero and where the top and left are the top-left of the border-box for the first CSS box (in content order) for the element. The amount of scrolling that has been done of the viewport area (or any other scrollable element) is taken into account when computing the bounding rectangle. This means that the rectangle's boundary edges (top, right, bottom, left) change their values every time the scrolling position changes (because their values are relative to the viewport and not absolute).\", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              children: \"Resume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","Ipng","jsxDEV","_jsxDEV","Fragment","_Fragment","About","children","class","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","_c","$RefreshReg$"],"sources":["/home/goddy/DEV/MY-PORTFOLIO/portfolio/src/Pages/About.js"],"sourcesContent":["import React from 'react'\nimport  './About.css'\nimport Ipng from \"../assets/images/hero.svg\";\n\nconst About = () => {\n\n  return (\n\n<>\n    <div class=\"section-title about-title\">\n            <h2>about me</h2>\n            <div class=\"underline\"></div>\n          </div>\n\n    <section className='about-container'>\n\n     <div>\n          <img src={Ipng} className=\"hero-photo\"\n            alt=\"about img\"\n          />\n      </div>\n\n\n   <div>\n        <article className='about-text'>\n          <p>LThe width and height properties of the DOMRect object returned by the method include the padding and border-width, not only the content width/height. In the standard box model, this would be equal to the width or height property of the element + padding + border-width. But if box-sizing: border-box is set for the element this would be directly equal to its width or height.\n\nThe returned value can be thought of as the union of the rectangles returned by getClientRects() for the element, i.e., the CSS border-boxes associated with the element.\n\nEmpty border-boxes are completely ignored. If all the element's border-boxes are empty, then a rectangle is returned with a width and height of zero and where the top and left are the top-left of the border-box for the first CSS box (in content order) for the element.\n\nThe amount of scrolling that has been done of the viewport area (or any other scrollable element) is taken into account when computing the bounding rectangle. This means that the rectangle's boundary edges (top, right, bottom, left) change their values every time the scrolling position changes (because their values are relative to the viewport and not absolute).\n<button\nclassName='btn'>Resume</button>\n</p>\n<p>\n  \n</p>\n        </article>\n     \n   </div>\n  </section>\n  </>\n\n    \n   \n  )\n}\n\nexport default About"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAQ,aAAa;AACrB,OAAOC,IAAI,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAElB,oBAEFH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACIJ,OAAA;MAAKK,KAAK,EAAC,2BAA2B;MAAAD,QAAA,gBAC9BJ,OAAA;QAAAI,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBT,OAAA;QAAKK,KAAK,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eAEZT,OAAA;MAASU,SAAS,EAAC,iBAAiB;MAAAN,QAAA,gBAEnCJ,OAAA;QAAAI,QAAA,eACKJ,OAAA;UAAKW,GAAG,EAAEb,IAAK;UAACY,SAAS,EAAC,YAAY;UACpCE,GAAG,EAAC;QAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGTT,OAAA;QAAAI,QAAA,eACKJ,OAAA;UAASU,SAAS,EAAC,YAAY;UAAAN,QAAA,gBAC7BJ,OAAA;YAAAI,QAAA,GAAG,8pCAOb,eAAAJ,OAAA;cACAU,SAAS,EAAC,KAAK;cAAAN,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACJT,OAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACR,CAAC;AAKL,CAAC;AAAAI,EAAA,GA3CKV,KAAK;AA6CX,eAAeA,KAAK;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}